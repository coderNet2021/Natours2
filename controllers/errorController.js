const AppError = require('../utils/appError');

const handleCastErrorDB = err => {
  // console.log('@@@@@@');
  // console.log(err.path);

  // console.log(err);
  const message = `Invalid ${err.path}: ${err.value}`;
  return new AppError(message, 400);
};

const handleDuplicateFieldsDB = err => {
  // const e = { ...err };
  // console.log(`***** ${e} *********`);
  // console.log(e);
  // console.log('mmmmmmmmm');
  // console.log(e.keyValue.name);
  const value = err.keyValue.name; //err.errmsg.match(/(["'])(\\?.)*?\1/)[0];
  // console.log('---------------', err);
  // console.log('****&&&&&****');

  //console.log(value);
  const message = `Duplicate field value: ${value} . please use another value. `;
  return new AppError(message, 400);
};

const handleValidationErrorDB = err => {
  const errors = Object.values(err.errors).map(el => el.message);
  const message = `Invalid Input Data ${errors.join('. ')}`;
  return new AppError(message, 400);
};
//
const sendErrorDev = (err, res) => {
  res.status(err.statusCode).json({
    status: err.status,
    message: err.message,
    stack: err.stack,
    error: err
  });
};

const handleJWTError = () =>
  new AppError('Invalid Token . please log in again! ', 401);

const handleJWTExpiredError = () =>
  new AppError('your Token has expired, plz log in again', 401);

const sendErrorProd = (err, res) => {
  // Operational, trusted error: send message to client
  if (err.isOperational) {
    res.status(err.statusCode).json({
      status: err.status,
      message: err.message
      //stack:err.stack,
      //error : err
    });
  }
  // Programming or other unknown error: don't leak error details
  else {
    // 1) Log error
    console.error('ERROR ðŸ’¥', err);

    // 2) Send generic message
    res.status(500).json({
      status: 'error',
      message: 'something went wrong'
    });
  }
};
module.exports = (err, req, res, next) => {
  // console.log(err.stack);

  err.statusCode = err.statusCode || 500;
  err.status = err.status || 'error';

  // console.log('we are here @@@@@#####$$$$$');
  // console.log({ ...err });
  // const test = { ...err };
  // console.log('$$$$$$$$$$$');
  // console.log(test._message);
  // //Object.values(err.errors)
  // const obj = Object.entries(test.errors);
  // console.log(obj[0]);

  if (process.env.NODE_ENV === 'development') {
    sendErrorDev(err, res);
  } else if (process.env.NODE_ENV === 'production') {
    let error = { ...err }; //, name: err.name };
    //console.log(`ERROR IS ${err}`);
    //console.log(error);
    //casterror vid 117 - 118 REDO to see what is causing this error
    //dans patch:
    // "price": "some proce error should display",
    //there is no error.name='CastError like in the videos 117 aw 118
    //this error is created by mongoose
    if (error.path === 'price') error = handleCastErrorDB(error); // error generated by the code
    //error generated by mongo, not mongoose
    // when we try to post a tour with name already existing vid 119
    if (error.code === 11000) error = handleDuplicateFieldsDB(error);

    //this error is created by mangoose also
    if (err.name === 'ValidationError') {
      // console.log('we are here @@@@@#####$$$$$');
      // console.log(error);
      error = handleValidationErrorDB(error);
    }

    if (err.name === 'JsonWebTokenError') {
      // console.log('we are here @@@@@#####$$$$$');
      // console.log(error);
      error = handleJWTError();
    }
    if (err.name === 'TokenExpiredError') {
      error = handleJWTExpiredError();
    }

    sendErrorProd(error, res);
  }
};
